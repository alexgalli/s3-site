Parameters:
  Environment:
    Type: String
    AllowedValues:
      - dev
      - prod
  SiteName:
    Type: String
  HostedZone:
    Type: String
  CertificateArn:
    Type: String
  S3Website:
    Type: String
  S3HostedZone:
    Type: String

Conditions:
    IsDev: !Equals [!Ref Environment, 'dev']

Resources:
  # s3
  S3BucketSite:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !If [IsDev, !Join ['.', ['dev', !Ref HostedZone]], !Ref HostedZone]
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
  S3BucketSitePolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3BucketSite
      PolicyDocument:
        Statement:
        - Action:
          - s3:GetObject
          Effect: Allow
          Principal: "*"
          Resource: !Join ['', [!GetAtt S3BucketSite.Arn, '/*']]

  # dns
  DNSRecordSetGroup:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Join ['', [!Ref HostedZone, '.']]
      RecordSets:
      - Name: !If [IsDev, !Join ['.', ['dev', !Ref HostedZone]], !Ref HostedZone]
        Type: A
        AliasTarget:
          HostedZoneId: !Ref S3HostedZone
          DNSName: !Ref S3Website
    
